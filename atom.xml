<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端小镇</title>
  
  <subtitle>从这里出发,到这里回家</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://duanxinxin.cn/"/>
  <updated>2019-07-09T06:53:32.827Z</updated>
  <id>http://duanxinxin.cn/</id>
  
  <author>
    <name>段鑫鑫</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode算法-两数之和</title>
    <link href="http://duanxinxin.cn/2018/12/27/LeetCode%E7%AE%97%E6%B3%95-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
    <id>http://duanxinxin.cn/2018/12/27/LeetCode算法-两数之和/</id>
    <published>2018-12-27T05:59:50.000Z</published>
    <updated>2019-07-09T06:53:32.827Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一题-两数之和"><a href="#第一题-两数之和" class="headerlink" title="第一题: 两数之和"></a>第一题: 两数之和</h2><p>给定一个整数数组<code>nums</code>和一个目标值<code>target</code>，请你在该数组中找出和为目标值的那<code>两个</code>整数，并返回他们的数组下标。<br><a id="more"></a><br>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例:"></a>示例:</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">给定 nums = [<span class="number">2</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>], target = <span class="number">9</span></span><br><span class="line"></span><br><span class="line">因为 nums[<span class="number">0</span>] + nums[<span class="number">1</span>] = <span class="number">2</span> + <span class="number">7</span> = <span class="number">9</span></span><br><span class="line">所以返回 [<span class="number">0</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><ul><li><p>第一个版本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">twoSum</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> source = [];</span><br><span class="line">  nums.forEach(<span class="function">(<span class="params">item, index, self</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> copyNums = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(self));</span><br><span class="line">    copyNums.splice(index, <span class="number">1</span>);</span><br><span class="line">    copyNums.forEach(<span class="function">(<span class="params">childItem, childIndex</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (childItem + item === target) &#123;</span><br><span class="line">        <span class="keyword">if</span> (childIndex + <span class="number">1</span> &gt; index) &#123;</span><br><span class="line">          source.push(index, childIndex + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> source;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>第二个版本</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function twoSumOptimizeOne(nums, target) &#123;</span><br><span class="line">  <span class="built_in">let</span> source = [];</span><br><span class="line">  <span class="built_in">let</span> <span class="built_in">length</span> = nums.<span class="built_in">length</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="built_in">let</span> i = <span class="number">0</span>;i &lt; <span class="built_in">length</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">let</span> j = i+<span class="number">1</span>;j&lt;<span class="built_in">length</span>;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(nums[i] + nums[j] === target)&#123;</span><br><span class="line">        source.<span class="built_in">push</span>(i,j)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> source;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>第三个版本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">twoSumOptimizeTwo</span>(<span class="params">nums, target</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> tempObj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> source = [];</span><br><span class="line">  nums.forEach(<span class="function">(<span class="params">item,index</span>) =&gt;</span> &#123;</span><br><span class="line">    tempObj[item] = index;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">let</span> length = nums.length;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; length;i++)&#123;</span><br><span class="line">    <span class="keyword">let</span> j = tempObj[target - nums[i]];</span><br><span class="line">    <span class="keyword">if</span>(j &amp;&amp; j !== i)&#123;</span><br><span class="line">      source = [i,j];</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> source;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>第四个版本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">twoSumOptimizeFinal</span>(<span class="params">nums, target</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> tempObj = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">  nums.forEach(<span class="function">(<span class="params">item,index</span>) =&gt;</span> &#123;</span><br><span class="line">    tempObj.set(item,index);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">let</span> length = nums.length;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; length;i++)&#123;</span><br><span class="line">    <span class="keyword">let</span> j = tempObj.get(target - nums[i]);</span><br><span class="line">    <span class="keyword">if</span>(j &amp;&amp; j !== i)&#123;</span><br><span class="line">      <span class="keyword">return</span> [i,j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">module</span>.exports = &#123; twoSum, twoSumOptimizeOne, twoSumOptimizeTwo,twoSumOptimizeFinal&#125;;</span><br></pre></td></tr></table></figure></li></ul><p>目前第四个版本运行效果最好,效率最高</p>]]></content>
    
    <summary type="html">
    
      LeetCode两数之和实现
    
    </summary>
    
      <category term="LeetCode算法" scheme="http://duanxinxin.cn/categories/LeetCode%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="LeetCode算法" scheme="http://duanxinxin.cn/tags/LeetCode%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Git版本管理理解</title>
    <link href="http://duanxinxin.cn/2018/12/25/Git%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E7%90%86%E8%A7%A3/"/>
    <id>http://duanxinxin.cn/2018/12/25/Git版本管理理解/</id>
    <published>2018-12-25T06:32:20.000Z</published>
    <updated>2019-07-03T07:36:09.222Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章主要开说明Git版本控制的理解<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章主要开说明Git版本控制的理解&lt;br&gt;
    
    </summary>
    
      <category term="Git" scheme="http://duanxinxin.cn/categories/Git/"/>
    
    
      <category term="版本控制" scheme="http://duanxinxin.cn/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>Git回滚到特定版本</title>
    <link href="http://duanxinxin.cn/2018/12/25/Git%E5%9B%9E%E6%BB%9A%E5%88%B0%E7%89%B9%E5%AE%9A%E7%89%88%E6%9C%AC/"/>
    <id>http://duanxinxin.cn/2018/12/25/Git回滚到特定版本/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2019-07-09T07:06:08.950Z</updated>
    
    <content type="html"><![CDATA[<p>Git–总会有后悔药吃<br><a id="more"></a></p><h4 id="1-整个项目回滚"><a href="#1-整个项目回滚" class="headerlink" title="1.整个项目回滚"></a>1.整个项目回滚</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">reset</span> <span class="comment">--hard | soft  hashId</span></span><br></pre></td></tr></table></figure><h4 id="2-特定某个文件回滚"><a href="#2-特定某个文件回滚" class="headerlink" title="2.特定某个文件回滚"></a>2.特定某个文件回滚</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">reset</span> <span class="comment">--hard | soft hashId 文件名字</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git–总会有后悔药吃&lt;br&gt;
    
    </summary>
    
      <category term="Git" scheme="http://duanxinxin.cn/categories/Git/"/>
    
    
      <category term="Git" scheme="http://duanxinxin.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>hexo创建文章，标签和分类</title>
    <link href="http://duanxinxin.cn/2018/09/04/hexo%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0%EF%BC%8C%E6%A0%87%E7%AD%BE%E5%92%8C%E5%88%86%E7%B1%BB/"/>
    <id>http://duanxinxin.cn/2018/09/04/hexo创建文章，标签和分类/</id>
    <published>2018-09-04T08:54:29.000Z</published>
    <updated>2019-07-09T07:03:18.010Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章将帮助大家来创建hexo文章,设置文章的标签、分类、评论、阅读更多<br><a id="more"></a></p><h4 id="1-生成新的文章"><a href="#1-生成新的文章" class="headerlink" title="1.生成新的文章"></a>1.生成新的文章</h4><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type"></span>文章名字</span><br></pre></td></tr></table></figure><h4 id="2-配置归档"><a href="#2-配置归档" class="headerlink" title="2.配置归档"></a>2.配置归档</h4><p>在生成的markdown文件中增加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">categories：分类名称</span><br></pre></td></tr></table></figure></p><h4 id="3-配置标签"><a href="#3-配置标签" class="headerlink" title="3.配置标签"></a>3.配置标签</h4><p>在生成的markdown文件中增加<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tags:</span> 标签名称</span><br></pre></td></tr></table></figure></p><h4 id="4-生成阅读更多"><a href="#4-生成阅读更多" class="headerlink" title="4.生成阅读更多"></a>4.生成阅读更多</h4><p>在生成的markdown文件中增加一些简要的说明文档，在其后增加<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--more--&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章将帮助大家来创建hexo文章,设置文章的标签、分类、评论、阅读更多&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://duanxinxin.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://duanxinxin.cn/tags/Hexo/"/>
    
  </entry>
  
</feed>
